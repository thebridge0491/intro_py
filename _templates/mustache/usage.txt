Templates for initializing project structure.

Install packages for chosen rendering script:
  
  (ruby) gem install [--user-install] mustache
  
  [(groovy) grape install com.github.spullara.mustache.java compiler '[0.8.12,)']

  (groovy) grape install com.github.jknack handlebars '[4.1.3,)'
  
  (python) pip install [--user] [pystache] chevron

Example usage:
  
  ruby render_mustache.rb [--data data.yaml] skeleton-py [date=2013-10-01]
  
  groovy render_mustache.groovy [--data data.yaml] skeleton-py [--kvset date=2013-10-01]
  
  python render_mustache.py [--data data.yaml] skeleton-py [--kvset date=2013-10-01]

  #resulting project structure
  
  echo #---------- ; tree -aF --dirsfirst --matchdirs -I build intro_py-util

#----------
intro_py-util
├── docs/
│   ├── _static/
│   │   └── .keep
│   ├── _templates/
│   │   └── .keep
│   ├── conf.py
│   ├── history.rst
│   ├── index.rst
│   └── readme.rst
├── intro_py/
│   ├── util/
│   │   ├── resources/
│   │   │   ├── greet.txt
│   │   │   ├── hypothesis.json
│   │   │   ├── logging.{conf,json,yaml}
│   │   │   ├── prac.{conf,json,toml,xml,yaml}
│   │   ├── tests/
│   │   │   ├── __init__.py
│   │   │   ├── __main__.py
│   │   │   ├── test_classic.py
│   │   │   ├── test_new.py
│   │   │   ├── test_props_classic.py
│   │   │   ├── test_props_new.py
│   │   │   └── ts_main.py
│   │   ├── __init__.py
│   │   ├── classic.py
│   │   ├── lib.py
│   │   ├── person.py
│   │  [├── __main__.py]
│   │  [└── cli.py]
│   └── __init__.py
|-- [.copier-answers.yaml]
├── .editorconfig
├── .{git,hg}ignore
├── .pycheckrc
├── HISTORY.rst
├── LICENSE
├── MANIFEST.in
├── Makefile-auxffi.mk
├── README.rst
├── exclude.lst
├── nose2.cfg
├── pyproject.toml
├── requirements-internal.txt
├── requirements.txt
├── setup.cfg
├── setup.py
└── setup_addcmds.py

7 directories, 46 files
